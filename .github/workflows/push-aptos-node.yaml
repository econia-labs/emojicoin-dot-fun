---
env:
  DOCKER_IMAGE_PLATFORM: 'linux/amd64'
jobs:
  build-push:
    runs-on: 'ubuntu-latest'
    steps:
    - uses: 'actions/checkout@v4'
    - id: 'aptos-node'
      run: |
        docker run --rm --network host \
        -v /var/run/docker.sock:/var/run/docker.sock \
        econialabs/aptos-cli:4.1.0 \
        uname -a && \
        /bin/bash -c "/usr/local/bin/aptos --version && \
        /usr/local/bin/aptos node run-localnet --with-indexer-api"
    - id: 'metadata'
      uses: 'docker/metadata-action@v5'
      with:
        images: 'econialabs/emojicoin-dot-fun-aptos-node'
        tags: |
          type=match,pattern=aptos-node-v(.*),group=1
    - uses: 'docker/setup-qemu-action@v3'
    - uses: 'docker/setup-buildx-action@v3'
    - uses: 'docker/login-action@v3'
      with:
        password: '${{ secrets.DOCKERHUB_TOKEN }}'
        username: '${{ secrets.DOCKERHUB_USERNAME }}'
    - uses: 'docker/build-push-action@v6'
      with:
        cache-from: 'type=gha'
        cache-to: 'type=gha,mode=max'
        context: '.'
        file: 'src/docker/aptos-node/Dockerfile'
        labels: '${{ steps.metadata.outputs.labels }}'
        # The emojicoin-node image can only be built for the platform on which
        # the build is running. This is because the build process requires
        # running `aptos node run-localnet`, which spawns a new container. This
        # new container must be able to run the `aptos` binary, which is only
        # available for the platform on which the build is running.
        platforms: '${{ env.DOCKER_IMAGE_PLATFORM }}'
        push: 'true'
        tags: '${{ steps.metadata.outputs.tags }}'
    timeout-minutes: 360
name: 'Build aptos-node Docker image and push to Docker Hub'
'on':
  workflow_dispatch: {}
  push:
    tags:
    - 'aptos-node-v*'
...
