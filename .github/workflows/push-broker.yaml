# cspell:word imagetools
# cspell:word onlatest
---
jobs:
  build:
    outputs:
      amd64-tags: >-
        ${{ matrix.arch == 'amd64' && steps.metadata.outputs.tags || '' }}
    runs-on: '${{ matrix.runner }}'
    steps:
    - uses: 'actions/checkout@v4'
    - run: 'git submodule update --init --recursive src/rust/processor'
    - id: 'metadata'
      uses: 'docker/metadata-action@v5'
      with:
        flavor: |
          ${{ matrix.flavor }}
        images: 'econialabs/emojicoin-dot-fun-indexer-broker'
        tags: |
          type=match,pattern=broker-v(.*),group=1
    - uses: 'docker/setup-buildx-action@v3'
    - uses: 'docker/login-action@v3'
      with:
        password: '${{ secrets.DOCKERHUB_TOKEN }}'
        username: '${{ secrets.DOCKERHUB_USERNAME }}'
    - name: 'Push ${{ matrix.arch }} image to Docker Hub'
      uses: 'docker/build-push-action@v6'
      with:
        build-args: 'FEATURES=ws'
        cache-from: 'type=gha'
        cache-to: 'type=gha,mode=max'
        context: 'src/rust'
        file: 'src/rust/broker/Dockerfile'
        platforms: 'linux/${{ matrix.arch }}'
        push: true
        tags: '${{ steps.metadata.outputs.tags }}'
    strategy:
      matrix:
        include:
        - arch: 'amd64'
          flavor: null
          runner: 'ubuntu-latest'
        - arch: 'arm64'
          flavor: |
            suffix=-arm64,onlatest=true
          runner: 'ubuntu-24.04-arm'
  update-manifest:
    needs: 'build'
    runs-on: 'ubuntu-latest'
    steps:
    - uses: 'docker/login-action@v3'
      with:
        password: '${{ secrets.DOCKERHUB_TOKEN }}'
        username: '${{ secrets.DOCKERHUB_USERNAME }}'
    - id: 'base-url'
      # Use `tr` to remove whitespace from the constructed URL before saving
      # the output for later use.
      run: |
        DOCKER_ORG="econialabs"
        REPO_NAME="emojicoin-dot-fun-indexer-broker"
        BASE_URL="https://hub.docker.com/v2/repositories/\
        ${DOCKER_ORG}/\
        ${REPO_NAME}/\
        tags"
        BASE_URL=$(echo "$BASE_URL" | tr -d ' ')
        echo "url=$BASE_URL" >> "$GITHUB_OUTPUT"
    - name: 'Append ARM images to AMD manifest, remove old ARM images'
      # Loop over all the AMD64 tags and append the ARM64 tags to the manifest,
      # then delete the old ARM64 tags from Docker Hub.
      run: |
        echo "${{ needs.build.outputs.amd64-tags }}" | while read -r tag; do
        if [ ! -z "$tag" ]; then
        docker buildx imagetools create --append -t "$tag" "$tag-arm64"
        VERSION=$(echo "$tag" | cut -d':' -f2)
        curl -X DELETE \
        -H "Authorization: JWT ${{ secrets.DOCKERHUB_TOKEN }}" \
        "${{ steps.base-url.outputs.url }}/${VERSION}-arm64/"
        fi
        done
name: 'Push multi-platform broker image to Docker Hub'
'on':
  push:
    tags:
    - 'broker-v*'
...
