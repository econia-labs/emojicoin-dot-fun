# cspell:word imagetools
---
env:
  BUILD_ARGS: 'FEATURES=ws'
  BUILD_CONTEXT: 'src/rust'
  BUILD_FILE: 'src/rust/broker/Dockerfile'
  DOCKER_REPO: 'econialabs/emojicoin-dot-fun-indexer-broker'
  GIT_TAG_PREFIX: 'broker'
jobs:
  build:
    outputs:
      digest-amd64: >-
        ${{ matrix.arch == 'amd64' && steps.build.outputs.digest || '' }}
      digest-arm64: >-
        ${{ matrix.arch == 'arm64' && steps.build.outputs.digest || '' }}
    runs-on: '${{ matrix.runner }}'
    steps:
    - uses: 'actions/checkout@v4'
    - uses: 'docker/setup-buildx-action@v3'
    - uses: 'docker/login-action@v3'
      with:
        password: '${{ secrets.DOCKERHUB_TOKEN }}'
        username: '${{ secrets.DOCKERHUB_USERNAME }}'
    - name: 'Check out processor submodule'
      run: 'git submodule update --init --recursive src/rust/processor'
    - id: 'build'
      name: 'Build and push untagged ${{ matrix.arch }} digest to Docker Hub'
      uses: 'docker/build-push-action@v6'
      with:
        build-args: '${{ env.BUILD_ARGS }}'
        cache-from: 'type=gha'
        cache-to: 'type=gha,mode=max'
        context: '${{ env.BUILD_CONTEXT }}'
        file: '${{ env.BUILD_FILE }}'
        outputs: 'name=${{ env.DOCKER_REPO }},push-by-digest=true,type=image'
        platforms: 'linux/${{ matrix.arch }}'
        push: true
    strategy:
      matrix:
        include:
        - arch: 'amd64'
          runner: 'ubuntu-latest'
        - arch: 'arm64'
          runner: 'ubuntu-24.04-arm'
  create-manifest:
    needs: 'build'
    runs-on: 'ubuntu-latest'
    steps:
    - uses: 'docker/setup-buildx-action@v3'
    - uses: 'docker/login-action@v3'
      with:
        password: '${{ secrets.DOCKERHUB_TOKEN }}'
        username: '${{ secrets.DOCKERHUB_USERNAME }}'
    - id: 'metadata'
      uses: 'docker/metadata-action@v5'
      with:
        images: '${{ env.DOCKER_REPO }}'
        tags: 'type=match,pattern=${{ env.GIT_TAG_PREFIX }}-v(.*),group=1'
    - name: 'Create multi-architecture image manifest on Docker Hub'
      run: |
        TAG_ARGS=$(jq -cr '.tags | map("-t " + .) | join(" ")' \
        <<< '${{ steps.metadata.outputs.json }}')
        docker buildx imagetools create ${TAG_ARGS} \
        ${{ env.DOCKER_REPO }}@${{ needs.build.outputs.digest-amd64 }} \
        ${{ env.DOCKER_REPO }}@${{ needs.build.outputs.digest-arm64 }}
name: 'Push multi-platform broker image to Docker Hub'
'on':
  push:
    tags:
    - 'broker-v*'
...
