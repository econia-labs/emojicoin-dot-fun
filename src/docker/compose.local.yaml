# yamllint disable rule:empty-lines rule:key-ordering rule:brackets
# cspell:word localnet
---
services:
  aptos-node:
    network_mode: 'host'
    image: 'econialabs/aptos-cli:4.1.0'
    ports:
    - '50051:50051'
    - '8070:8070'
    - '8090:8090'
    - '8080:8080'
    - '8081:8081'
    healthcheck:
      test: ['CMD', 'curl', 'http://localhost:8070/']
      interval: '5s'
      timeout: '5s'
      retries: 10
      start_period: '60s'
    # In order to start the node with the indexer API; i.e., run
    # `aptos node run-localnet --with-indexer-api`, the Docker socket must
    # be mounted to the container. This mount enables the container to start a
    # new container. Note that this is *not* 'Docker-in-Docker', but rather
    # 'Docker-outside-Docker'. That is, the container can act as the host in
    # terms of creating and orchestrating other containers but still appears as
    # a sibling to the existing containers and any new containers it creates.
    volumes:
    - '/var/run/docker.sock:/var/run/docker.sock'
    entrypoint: [
      'aptos',
      'node',
      'run-localnet',
      '--with-indexer-api',
      '--force-restart',
      '--bind-to',
      '0.0.0.0'
    ]
  processor:
    depends_on:
      aptos-node:
        condition: 'service_healthy'
...
