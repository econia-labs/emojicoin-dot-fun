# The Aptos network to use.
# - mainnet
# - testnet
# - devnet
# - local
APTOS_NETWORK="local"

# This is the package address of the main module address.
#
# - It must start with `0x`
# - Remove all leading 0s after the `0x`.
# - Examples:
#   - GOOD: 0xabc
#   - BAD: 0x0abc
#   - BAD: abc
#   - BAD: 0abc
EMOJICOIN_MODULE_ADDRESS="0xf000d910b99722d201c6cf88eb7d1112b43475b9765b118f289b5d65d919000d"

# This is the package address of the rewards wrapper smart contract.
EMOJICOIN_REWARDS_MODULE_ADDRESS="0xf000d910b99722d201c6cf88eb7d1112b43475b9765b118f289b5d65d919000d"

# This is the address that receives fees generated by any `emojicoin_dot_fun`
# smart contract. It is passed to the rewards contract at compile time, but
# used in all other contexts at runtime.
EMOJICOIN_INTEGRATOR_ADDRESS="0xf000d910b99722d201c6cf88eb7d1112b43475b9765b118f289b5d65d919000d"

# The GRPC endpoint from which the indexer receives event data. Aptos Labs
# runs several public endpoints, listed below.
#
# mainnet: https://grpc.mainnet.aptoslabs.com:443
# testnet: https://grpc.testnet.aptoslabs.com:443
# devnet: https://grpc.devnet.aptoslabs.com:443
# local: http://host.docker.internal:50051
#
# NOTE: If you get errors connecting to `host.docker.internal` and you're
# using Docker Desktop on WSL2 (Windows Subsystem for Linux), you need to make
# sure you enable the `WSL 2 based engine` setting and the `Add the
# *.docker.internal names to the host's /etc/hosts file` setting.
# You *also* need to enable the experimental `Enable host networking` feature.
#   > To enable this feature, navigate to the Features in development tab in
#   > Settings, and then select Enable host networking.
# See: https://docs.docker.com/engine/network/tutorials/host/
# And: https://docs.docker.com/desktop/windows/permission-requirements/
GRPC_DATA_SERVICE_URL="http://host.docker.internal:50051"

# For a public chain you have to get this token from https://developers.aptoslabs.com/.
# For local end-to-end testing you can use: "dummy_token"
GRPC_AUTH_TOKEN="dummy_token"

# The minimum transaction version at which to start indexing.
# Events that occur prior to this transaction version will not be indexed.
# This is most often set to the transaction version where the package is published.
MINIMUM_STARTING_VERSION="0"

# A hard limit to the number of rows PostgREST will fetch from a view, table, or stored procedure.
# Limits payload size for accidental or malicious requests.
POSTGREST_MAX_ROWS="500"

# The port the processor and broker use to communicate.
PROCESSOR_WS_PORT="3008"

# The port the broker listens on for client connections.
BROKER_PORT="3009"

# The private key used to deploy the package locally for tests.
# Note that this private key is obviously public and should never be used in
# production or for any real value transactions.
# If you change this, local tests will fail unless you also change the
# corresponding `*_ADDRESS` values that are derived from this key.
PUBLISHER_PK="0xeaa964d1353b075ac63b0c5a0c1e92aa93355be1402f6077581e37e2a846105e"

# The caching time for server-side requests for the NextJS web application.
REVALIDATION_TIME="1"

# The integrator fee rate basis points.
FEE_RATE_BPS="100"

# Secret hash seed.
HASH_SEED="some random string that is not public"

# The private key for the "big money guy", who sends transactions in tests.
# Corresponds to the address:
#   0xb168d5a1137a3254a9443459ae5b4959e8f5c835858f04e5a01fe133d237d00d
BIG_MONEY_GUY_PK="0xa5e11183d0c23b8c49b40dd71bba7fa0992aed9b89c42934a1bb8f6e4ccc4ec4"
